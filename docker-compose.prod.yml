services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
    environment:
      - FLASK_APP=app.py
      - DB_HOST=${LIGHTSAIL_DB_HOST}
      - DB_PORT=${LIGHTSAIL_DB_PORT}
      - DB_NAME=${LIGHTSAIL_DB_NAME}
      - DB_USER=${LIGHTSAIL_DB_USER}
      - DB_PASSWORD=${LIGHTSAIL_DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SECRET_KEY=${SECRET_KEY}
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
      - APP_SECRET_KEY=${APP_SECRET_KEY}
    depends_on:
      # postgres:
      #   condition: service_healthy
      redis:
        condition: service_started
    command: ["./entrypoint.sh"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://backen:4040/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:6
    ports:
      - "6379:6379"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: aus-job-board-frontend:latest

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./nginx/job-board.conf:/etc/nginx/conf.d/default.conf  # Add this line
      - nginx_cache:/var/cache/nginx
    depends_on:
      - backend
      - frontend

volumes:
  nginx_cache:
  postgres_data: # named volume is managed by Docker and persists across container restarts