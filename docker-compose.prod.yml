services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
    environment:
      - FLASK_APP=app.py
      - DB_HOST=postgres
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SECRET_KEY=${SECRET_KEY}
      - AUTH0_DOMAIN=dev-oeq0mjghj1zj746x.us.auth0.com
      - AUTH0_CLIENT_ID=3sGw77fl2BfCmhS3SknAwZviTFeWpAwq
      - AUTH0_CLIENT_SECRET=R9ZGC2WeqLwEuWDzmeYamHAHySmiECfkcU-dd3QdBgZRVZInYKCvE4alE0RGzvLr
      - APP_SECRET_KEY=a566f81cba10be2bb9b2a87c02544b4310a5f3ca728fc1cbdc6d0e89ceee89dc
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: ["./entrypoint.sh"]

  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    ports:
      - "6379:6379"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: aus-job-board-frontend:latest

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./nginx/job-board.conf:/etc/nginx/conf.d/default.conf  # Add this line
      - nginx_cache:/var/cache/nginx
    depends_on:
      - backend
      - frontend

volumes:
  nginx_cache:
  postgres_data: # named volume is managed by Docker and persists across container restarts