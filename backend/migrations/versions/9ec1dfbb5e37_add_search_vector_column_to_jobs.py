"""Add search_vector column to jobs

Revision ID: 9ec1dfbb5e37
Revises: dc5bcd043dd3
Create Date: 2024-05-28 12:18:23.528178

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9ec1dfbb5e37'
down_revision = 'dc5bcd043dd3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('jobs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('search_vector', postgresql.TSVECTOR(), nullable=True))
    
    # Create GIN index
    op.create_index('jobs_search_idx', 'jobs', ['search_vector'], unique=False, postgresql_using='gin')
    
    # Create the trigger function and trigger
    op.execute("""
    CREATE FUNCTION update_jobs_search_vector() RETURNS trigger AS $$
    BEGIN
      NEW.search_vector := 
      to_tsvector('english', coalesce(NEW.title, '') || ' ' || coalesce(NEW.description, '') || ' ' || coalesce(NEW.specialization, '') || ' ' || coalesce(NEW.city, '') || ' ' || coalesce(NEW.state, '') || ' ' || coalesce(NEW.country, '') || ' ' || coalesce(NEW.experience_level, '') || ' ' || array_to_string(coalesce(NEW.tech_stack, '{}'), ' '));
      RETURN NEW;
    END;
    $$ LANGUAGE plpgsql;
    """)

    op.execute("""
    CREATE TRIGGER trigger_update_jobs_search_vector
    BEFORE INSERT OR UPDATE ON jobs
    FOR EACH ROW EXECUTE FUNCTION update_jobs_search_vector();
    """)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('jobs', schema=None) as batch_op:
        batch_op.drop_column('search_vector')

    # Drop the trigger and function
    op.execute("DROP TRIGGER IF EXISTS trigger_update_jobs_search_vector ON jobs;")
    op.execute("DROP FUNCTION IF EXISTS update_jobs_search_vector;")

    # Drop the GIN index
    op.drop_index('jobs_search_idx', table_name='jobs')

    # ### end Alembic commands ###
