services:
  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost/api
    command: npm start
    depends_on:
      - backend

  backend:
    build: ./backend
    volumes:
      - ./backend:/app
    command: gunicorn --bind 0.0.0.0:4040 --config gunicorn_config.py "app:create_app()"
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - DB_HOST=postgres
      - DB_NAME=job_board
      - DB_USER=jai
      - DB_PASSWORD=techboard
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SECRET_KEY=${SECRET_KEY:-1234567890}
    ports:
      - "4040:4040"
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: ankane/pgvector:latest
    environment:
      POSTGRES_DB: job_board
      POSTGRES_USER: jai
      POSTGRES_PASSWORD: techboard
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init-pgvector.sql:/docker-entrypoint-initdb.d/init-pgvector.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jai -d job_board"]
      interval: 5s
      timeout: 5s

  redis:
    image: redis:6
    ports:
      - "6379:6379"

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/job-board.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:
