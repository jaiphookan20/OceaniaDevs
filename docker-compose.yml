services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    # image: jayphookan/aus-job-board-backend:v1
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
    environment:
      - FLASK_APP=app.py
      - DB_HOST=postgres
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SECRET_KEY=${SECRET_KEY}
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
      - APP_SECRET_KEY=${APP_SECRET_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  # postgres:
  #   build:
  #     context: ./postgres
  #     dockerfile: Dockerfile
  #   # image: jayphookan/aus-job-board-postgres:v1
  #   env_file:
  #     - .env
  #   environment:
  #     POSTGRES_DB: ${DB_NAME}
  #     POSTGRES_USER: ${DB_USER}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5
  postgres:
    # profiles: ["dev"]
    build:
      context: ./postgres
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    ports:
      - "6379:6379"

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    volumes:
    # Mount the Nginx configuration file
      # - frontend_build:/usr/share/nginx/html
      - ./nginx/job-board.conf:/etc/nginx/conf.d/default.conf
      - ./backend/uploads:/app/uploads
      # - ./frontend/build:/app/frontend/build # Mount the build directory
    depends_on:
      - backend

volumes:
  # frontend_build:
  postgres_data: # named volume is managed by Docker and persists across container restarts