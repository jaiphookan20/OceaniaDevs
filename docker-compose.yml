
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
    environment:
      - FLASK_APP=app.py
      - DB_HOST=postgres
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      - postgres
      - redis

  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:6
    ports:
      - "6379:6379"

  # nginx:
  #   build: ./nginx
  #   ports:
  #     - "80:80"
  #   volumes:
  #   # Mount the Nginx configuration file
  #     # - frontend_build:/usr/share/nginx/html
  #     - ./nginx/job-board.conf:/etc/nginx/conf.d/default.conf
  #     - ./backend/uploads:/app/uploads
  #     # - ./frontend/build:/app/frontend/build # Mount the build directory
  #   depends_on:
  #     - backend

volumes:
  # frontend_build:
  postgres_data: # named volume is managed by Docker and persists across container restarts