"""empty message

Revision ID: f90cb0a4ce93
Revises: 
Create Date: 2024-04-28 19:04:51.824648

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import text


# revision identifiers, used by Alembic.
revision = 'f90cb0a4ce93'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    conn = op.get_bind()
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('seekers', schema=None) as batch_op:
        batch_op.drop_column('king')
    # Check if the enum 'state_enum' exists before attempting to create it
    res = conn.execute(text("SELECT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'state_enum')"))
    exists = res.scalar()
    if not exists:
        op.execute("CREATE TYPE state_enum AS ENUM('VIC', 'NSW', 'ACT', 'WA', 'QLD', 'NT', 'TAS', 'SA')")

    # Check if the enum 'country_enum' exists before attempting to create it
    res = conn.execute(text("SELECT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'country_enum')"))
    exists = res.scalar()
    if not exists:
        op.execute("CREATE TYPE country_enum AS ENUM('Australia', 'New Zealand')")


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('seekers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('king', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.execute("DROP TYPE country_enum CASCADE")
    op.execute("DROP TYPE state_enum CASCADE")

    # ### end Alembic commands ###
