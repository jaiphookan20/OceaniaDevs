name: CI/CD Pipeline

on:
  push:
    branches:
      - search
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Build the React app
        env:
          CI: false
        run: |
          cd frontend
          npm run build

      - name: Debug - List build contents
        run: |
          ls -R frontend/build

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: replace

      - name: Check DNS resolution
        run: |
          nslookup ${{ secrets.LIGHTSAIL_HOST }}

      - name: Test basic connectivity
        run: |
          nc -zv ${{ secrets.LIGHTSAIL_HOST }} 22 || echo "Cannot connect to port 22"

      - name: Debug SSH connection
        run: |
          ssh -vvv -o StrictHostKeyChecking=no ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }} echo "SSH connection successful" || echo "SSH connection failed"

      - name: Test SSH connection
        run: |
          ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }} echo "SSH connection successful" || exit 1

      - name: Deploy frontend to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }} "rm -rf ~/OceaniaDevs/frontend/build && mkdir -p ~/OceaniaDevs/frontend/build"
          scp -r -o StrictHostKeyChecking=no frontend/build/* ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }}:~/OceaniaDevs/frontend/build/

      - name: Deploy backend code
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }} "
            sudo chown -R ${{ secrets.LIGHTSAIL_USER }}:${{ secrets.LIGHTSAIL_USER }} ~/OceaniaDevs/backend
            rm -rf ~/OceaniaDevs/backend || true
            mkdir -p ~/OceaniaDevs/backend
          "
          scp -r -o StrictHostKeyChecking=no backend/* ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }}:~/OceaniaDevs/backend/

      - name: Deploy postgres files
        run: |
            ssh -o StrictHostKeyChecking=no ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }} "
              sudo chown -R ${{ secrets.LIGHTSAIL_USER }}:${{ secrets.LIGHTSAIL_USER }} ~/OceaniaDevs/postgres
              rm -rf ~/OceaniaDevs/postgres || true
              mkdir -p ~/OceaniaDevs/postgres
            "
            scp -r -o StrictKeyChecking=no postgres/* ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }}:~/OceaniaDevs/postgres/

      - name: Copy env.py file
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }} "
            mkdir -p ~/OceaniaDevs/backend/migrations
            cp ~/OceaniaDevs/backend/migrations/env.py ~/OceaniaDevs/backend/migrations/env.py.backup || true
          "
          scp -o StrictHostKeyChecking=no backend/migrations/env.py ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }}:~/OceaniaDevs/backend/migrations/env.py

      - name: Set correct permissions for backend files
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }} "
            sudo chown -R ${{ secrets.LIGHTSAIL_USER }}:${{ secrets.LIGHTSAIL_USER }} ~/OceaniaDevs/backend
            find ~/OceaniaDevs/backend -type d -exec chmod 755 {} \;
            find ~/OceaniaDevs/backend -type f -exec chmod 644 {} \;
          "

      - name: Create .env file on server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }} "
          cd ~/OceaniaDevs && 
          cat << EOF > .env
          AUTH0_CLIENT_ID=${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET=${{ secrets.AUTH0_CLIENT_SECRET }}
          AUTH0_DOMAIN=${{ secrets.AUTH0_DOMAIN }}
          APP_SECRET_KEY=${{ secrets.APP_SECRET_KEY }}
          DB_NAME=${{ secrets.DB_NAME }}
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_HOST=postgres
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          REDIS_HOST=redis
          REDIS_PORT=6379
          FLASK_APP=app.py
          FLASK_ENV=production
          EOF
          "

      - name: Verify deployment
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }} "ls -R ~/OceaniaDevs/frontend/build/"

      - name: Restart Docker containers
        run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }} "
          cd ~/OceaniaDevs && 
          docker-compose -f docker-compose.yml -f docker-compose.prod.yml down && 
          docker-compose -f docker-compose.yml -f docker-compose.prod.yml build --no-cache postgres && 
          docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d --build
        "