version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - FLASK_ENV=staging
      - DB_HOST=${STAGING_DB_HOST}
      - DB_PORT=${STAGING_DB_PORT}
      - DB_NAME=${STAGING_DB_NAME}
      - DB_USER=${STAGING_DB_USER}
      - DB_PASSWORD=${STAGING_DB_PASSWORD}
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: aus-job-board-frontend:staging

  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A celery_app.celery worker 
            --loglevel=info 
            --concurrency=1 
            --pool=solo
            --max-tasks-per-child=10
    env_file:
      - .env
    environment:
      - FLASK_ENV=staging
      - DB_HOST=${STAGING_DB_HOST}
      - DB_PORT=${STAGING_DB_PORT}
      - DB_NAME=${STAGING_DB_NAME}
      - DB_USER=${STAGING_DB_USER}
      - DB_PASSWORD=${STAGING_DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    deploy:
      resources:
        limits:
          cpus: '0.30'
          memory: 256M
    depends_on:
      - redis
      - backend

  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A celery_app beat --loglevel=info
    env_file:
      - .env
    environment:
      - FLASK_ENV=staging
      - DB_HOST=${STAGING_DB_HOST}
      - DB_PORT=${STAGING_DB_PORT}
      - DB_NAME=${STAGING_DB_NAME}
      - DB_USER=${STAGING_DB_USER}
      - DB_PASSWORD=${STAGING_DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    deploy:
      resources:
        limits:
          cpus: '0.10'   # Very minimal CPU needed for beat
          memory: 128M   # Minimal memory for beat scheduler
    depends_on:
      - redis
      - backend

  postgres:
    profiles: ["do-not-run-in-staging"]
    image: postgres:15
    command: ["echo", "Postgres is disabled in staging"]